import { gte as isVersionGte, gtr as isGreaterThanVersionInRange, ltr as isLessThanVersionInRange } from 'semver';
export declare const isNumberString: (num: unknown) => boolean;
export declare const isString: (data: unknown) => boolean;
export declare const isBoolean: (data: unknown) => boolean;
export declare const isSInt32: (data: unknown) => boolean;
export declare const isUInt32: (data: unknown) => boolean;
export declare const isSInt64: (data: unknown) => boolean;
export declare const isUInt64: (data: unknown) => boolean;
export declare const isBytes: (data: unknown) => boolean;
export declare const isValidInteger: (num: unknown) => boolean;
export declare const isHexString: (data: unknown) => boolean;
export declare const isEncryptedPassphrase: (data: string) => boolean;
export declare const isSemVer: (version: string) => boolean;
export declare const isRangedSemVer: (version: string) => boolean;
export declare const isLessThanRangedVersion: typeof isLessThanVersionInRange;
export declare const isGreaterThanRangedVersion: typeof isGreaterThanVersionInRange;
export declare const isProtocolString: (data: string) => boolean;
export declare const isIPV4: (data: string) => boolean;
export declare const isIPV6: (data: string) => boolean;
export declare const isIP: (data: string) => boolean;
export declare const isPort: (port: string) => boolean;
export declare const isStringEndsWith: (target: string, suffixes: ReadonlyArray<string>) => boolean;
export declare const isVersionMatch: typeof isVersionGte;
export declare const isCsv: (data: string) => boolean;

####################################################################################
# Copyright Â© 2020 Lisk Foundation
#
# See the LICENSE file at the top-level directory of this distribution
# for licensing information.
#
# Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
# no part of this software, including this file, may be copied, modified,
# propagated, or distributed except according to the terms contained in the
# LICENSE file.
#
# Removal or modification of this copyright notice is prohibited.
####################################################################################
swagger: '2.0'

info:
  title: Lisk API documentation
  description: |
    # Welcome!

    ## Access restrictions
    The API endpoints are by default restricted to a whitelist of IPs that can be found under `plugins.httpApi.whiteList` in the config.
    If it is required for your API to be accessible by the public, this can be achieved by changing `plugins.httpApi.whiteList` to `[]`.
    This will allow anyone to make requests to your application.

    ## Requests
    Chained filter parameters are logically connected with `AND`.
    `HTTP` is the supported URL schema by default.

    ## Responses
    The general response format is JSON (`application/json`).
    The responses for each API request have a common basic structure as shown below:
    ```javascript
    {
        "data": {}, //Contains the requested data.
        "meta": {}, //Contains additional metadata, e.g. the values of `limit` and `offset`.
    }
    ```
    ## List of endpoints
    All possible API endpoints for Lisk Core are listed below.
    Click on an endpoint to show the descriptions, details and examples.
  version: '1.0.32'
  contact:
    email: admin@lisk.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0

# All paths relative to specified basePath
basePath: /api

# Tags for organizing operations
tags:
  - name: Accounts
    description: Account related API endpoints.
  - name: Blocks
    description: Block related API endpoints.
  - name: Delegates
    description: Delegates related API endpoints.
  - name: Node
    description: Node related API endpoints.
  - name: Peers
    description: Peers related API endpoints.
  - name: Transactions
    description: Transactions related API endpoints.

schemes:
  - http

paths:
  /accounts/{address}:
    get:
      tags:
        - Accounts
      summary: Requests account data.
      description: Search for matching account in the system.
      produces:
        - application/json
      parameters:
        - name: address
          in: path
          type: string
          description: |
            The binary address in hex format as defined in LIP-0018.
          required: true
      responses:
        200:
          description: Account requested.
          schema:
            $ref: '#/definitions/AccountResponse'
        400:
          description: Malformed query or parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Data not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /delegates:
    get:
      tags:
        - Delegates
      summary: Requests delegates data.
      description: Search for a specified delegate in the system.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        200:
          description: Registered delegate accounts.
          schema:
            $ref: '#/definitions/DelegateResponse'
        400:
          description: Malformed query or parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /forgers:
    get:
      tags:
        - Delegates
      summary: Requests next forgers data.
      description: |
        Returns a list of the next forgers in this delegate round.
      produces:
        - application/json
      responses:
        200:
          description: A list of the next forgers.
          schema:
            $ref: '#/definitions/ForgersResponse'
        400:
          description: Malformed query or parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /blocks/{id}:
    get:
      tags:
        - Blocks
      summary: Requests block data
      description: Search for block in the system by ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          type: string
          description: id of the searching block in hex format
          required: true
      responses:
        200:
          description: Block requested.
          schema:
            $ref: '#/definitions/BlockResponse'
        400:
          description: Malformed query or parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Data not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /blocks:
    get:
      tags:
        - Blocks
      summary: Requests block data
      description: Search for block in the system by height.
      produces:
        - application/json
      parameters:
        - name: height
          in: query
          type: integer
          description: height of the searching block.
          required: true
      responses:
        200:
          description: Block requested.
          schema:
            $ref: '#/definitions/BlocksResponse'
        400:
          description: Malformed query or parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Data not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /transactions/{id}:
    get:
      tags:
        - Transactions
      summary: Requests transaction data
      description: Search for transaction in the system by ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          type: string
          description: id of the searching transaction in hex format
          required: true
      responses:
        200:
          description: Transaction requested.
          schema:
            $ref: '#/definitions/TransactionResponse'
        400:
          description: Malformed query or parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Data not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /transactions:
    post:
      tags:
        - Transactions
      summary: Submits signed transaction for processing.
      description: |
        Submits signed transaction object for processing by the transaction pool.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: transaction
          description: Transaction object for processing by the transaction pool.
          required: true
          schema:
            $ref: '#/definitions/TransactionRequest'
      responses:
        200:
          description: Transaction requested.
          schema:
            $ref: '#/definitions/TransactionCreateResponse'
        400:
          description: Malformed query or parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: Some error related to processing of request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /node/transactions:
    get:
      tags:
        - Node
        - Transactions
      summary: Requests unprocessed transactions data.
      description: |
        Search for specific transactions by providing the appropriate parameters.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        200:
          description: Transactions list.
          schema:
            $ref: '#/definitions/TransactionsResponse'
        400:
          description: Malformed query or parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /node/info:
    get:
      tags:
        - Node
      summary: Requests node information
      description: Returns information of the running node, e.g. height.
      produces:
        - application/json
      responses:
        200:
          description: Node info response.
          schema:
            $ref: '#/definitions/NodeInfoResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /peers:
    get:
      tags:
        - Peers
      summary: Requests peers data.
      description: Search for specified peers.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - in: query
          name: state
          description: Current state of the network.
          type: string
          enum:
            - connected
            - disconnected
      responses:
        200:
          description: List of peers.
          schema:
            $ref: '#/definitions/PeersResponse'
        400:
          description: Malformed query or parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'

  /forging:
    patch:
      tags:
        - Node
      summary: Toggles the forging status of a delegate.
      description: |
        Upon passing the correct password and address, forging will be enabled or disabled for the delegate of this particular node.
        The password can be generated locally by encrypting your passphrase, either by using Lisk Commander or with Lisk Elements.
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: data
          description: Password for decrypting passphrase of delegate for its corresponding address.
          required: true
          schema:
            type: object
            required:
              - password
              - address
              - forging
              - maxHeightPreviouslyForged
              - maxHeightPrevoted
              - overwrite
            properties:
              forging:
                type: boolean
                example: true
                description: Forging status of the delegate.
              password:
                type: string
                example: 'happy tree friends elephant tree'
                minLength: 5
                description: Password for decrypting passphrase of delegate.
              address:
                type: string
                example: '0903f4c5cb599a7928aef27e294e98293d1e3888'
                format: hex
                description: Address of the delegate.
              height:
                type: number
                example: 100
                description: Last forged block height.
              maxHeightPreviouslyForged:
                type: number
                example: 100
                description: Delegates largest previously forged height.
              maxHeightPrevoted:
                type: number
                example: 10
                description: Delegates largest prevoted height for a block.
              overwrite:
                type: boolean
                example: true
                description: Boolean flag to overwrite forger info.
      responses:
        200:
          description: Delegate forging toggled on or off.
          schema:
            $ref: '#/definitions/ForgingStatusResponse'
        400:
          description: Malformed query or parameters.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /forging/info:
    get:
      tags:
        - Forging
      summary: Request forging status of forgers.
      description: Gives a list of all forgers and their info.
      produces:
        - application/json
      responses:
        200:
          description: List of forgers.
          schema:
            $ref: '#/definitions/ForgersResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/ErrorResponse'
parameters:
  limit:
    in: query
    name: limit
    description: Limit applied to results.
    type: integer
    format: int32
    minimum: 1
    default: 10
  offset:
    name: offset
    in: query
    description: Offset value for results.
    type: integer
    format: int32
    minimum: 0
    default: 0

definitions:
  ErrorResponse:
    type: object
    required:
      - errors
    properties:
      errors:
        type: array
        items:
          type: object
          properties:
            message:
              description: Error message containing details of the error.
              example: Reason of the error
              type: string
              minLength: 1

  AccountResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/Account'
      meta:
        type: object

  DelegateResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Account'
      meta:
        $ref: '#/definitions/Meta'

  ForgersResponse:
    type: object
    required:
      - data
    properties:
      data:
        description: List of forgers.
        type: array
        items:
          $ref: '#/definitions/Forger'
      meta:
        type: object

  ForgingStatusResponse:
    type: object
    required:
      - data
      - meta
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/ForgingStatus'
      meta:
        type: object
        properties:
          count:
            description: Number of records returned in response.
            type: integer
            minimum: 0

  BlockResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: object
        required:
          - header
          - payload
        properties:
          header:
            $ref: '#/definitions/BlockHeader'
          payload:
            type: array
            items:
              $ref: '#/definitions/Transaction'
      meta:
        type: object

  BlocksResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          type: object
          required:
            - header
            - payload
          properties:
            header:
              $ref: '#/definitions/BlockHeader'
            payload:
              type: array
              items:
                $ref: '#/definitions/Transaction'
      meta:
        type: object

  TransactionCreateResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: object
        required:
          - transactionId
        properties:
          transactionId:
            type: string
      meta:
        type: object

  TransactionResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/Transaction'
      meta:
        type: object

  TransactionsResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Transaction'
      meta:
        $ref: '#/definitions/Meta'

  PeersResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Peer'
      meta:
        $ref: '#/definitions/Meta'

  NodeInfoResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/NodeInfo'
      meta:
        type: object

  ForgingStatus:
    type: object
    required:
      - address
      - forging
      - height
      - maxHeightPreviouslyForged
      - maxHeightPrevoted
    properties:
      address:
        type: string
        example: '0903f4c5cb599a7928aef27e294e98293d1e3888'
        format: hex
        description: Address of the delegate.
      forging:
        type: boolean
        example: true
        description: True if the delegate enabled forging.
      height:
        type: number
        example: '234577'
        description: Height of the forger.
      maxHeightPreviouslyForged:
        type: number
        example: '234534'
        description: The largest height of any block previously forged by the forging delegate.
      maxHeightPrevoted:
        type: number
        example: 10
        description: The largest height of any block previously prevoted by the forging delegate.

  Meta:
    type: object
    required:
      - limit
      - offset
    properties:
      limit:
        description: Limit applied to results.
        type: integer
        minimum: 1
        default: 10
      offset:
        description: Offset value for results.
        type: integer
        format: int32
        minimum: 0
        default: 0

  Account:
    type: object
    required:
      - address
      - token
      - sequence
      - keys
      - dpos
    properties:
      address:
        type: string
        example: 9d0149b0962d44bfc08a9f64d5afceb6281d7fb5
        description: |
          The binary address in hex format as defined in LIP-0018.
      token:
        type: object
        required:
          - balance
        properties:
          balance:
            type: string
            example: 1081560729258
            description: The current balance of the account in Beddows.
      sequence:
        type: object
        required:
          - nonce
        properties:
          nonce:
            type: string
            example: 154
            description: The current nonce associated to account for transaction processing.
      keys:
        type: object
        required:
          - mandatoryKeys
          - optionalKeys
          - numberOfSignatures
        properties:
          mandatoryKeys:
            type: array
            description: Hex encoded value of mandatory multi-signature account members public keys
            items:
              type: string
          optionalKeys:
            type: array
            description: Hex encoded value of optional multi-signature account members public keys
            items:
              type: string
          numberOfSignatures:
            type: number
            description: Number of required signatures
      dpos:
        type: object
        required:
          - delegate
          - unlocking
          - sentVotes
        properties:
          delegate:
            type: object
            required:
              - username
              - pomHeights
              - consecutiveMissedBlocks
              - lastForgedHeight
              - isBanned
              - totalVotesReceived
            properties:
              username:
                type: string
              pomHeights:
                type: array
                items:
                  type: number
              consecutiveMissedBlocks:
                type: number
              lastForgedHeight:
                type: number
              isBanned:
                type: boolean
              totalVotesReceived:
                type: string
          sentVotes:
            type: array
            items:
              type: object
              required:
                - delegateAddress
                - amount
              properties:
                delegateAddress:
                  type: string
                amount:
                  type: string
          unlocking:
            type: array
            items:
              type: object
              required:
                - delegateAddress
                - amount
                - unvoteHeight
              properties:
                delegateAddress:
                  type: string
                amount:
                  type: string
                unvoteHeight:
                  type: number

  BlockAsset:
    type: object
    required:
      - maxHeightPreviouslyForged
      - maxHeightPrevoted
      - seedReveal
    properties:
      maxHeightPreviouslyForged:
        type: number
        description: The largest height of any block previously forged by the forging delegate.
      maxHeightPrevoted:
        type: number
        description: The largest height of any block previously prevoted by the forging delegate.
      seedReveal:
        type: string
        description: Hex encoded value that contains the new seed value revealed each round by the forging delegate.

  GenesisBlockAsset:
    type: object
    required:
      - accounts
      - initDelegates
      - initRounds
    properties:
      accounts:
        type: array
        description: Array of of initial forging delegate accounts.
        items:
          type: object
          $ref: '#/definitions/Account'
      initDelegates:
        type: array
        description: Array of public keys of initial forging delegates.
        items:
          type: string
          description: Public key of forging delegate.
      initRounds:
        type: number
        description: Number of rounds for bootstrapping period.

  BlockHeader:
    type: object
    required:
      - id
      - version
      - timestamp
      - height
      - previousBlockID
      - transactionRoot
      - generatorPublicKey
      - reward
      - asset
    properties:
      id:
        type: string
        description: Hex encoded value of the unique identifier of the block.
      version:
        type: number
        description: Versioning for future upgrades of the Lisk protocol.
      timestamp:
        type: number
        description: Unix timestamp of block created in second
      height:
        type: number
        description: |
          Height of the network, when the block was forged.
          The height of the network represents the number of blocks
          that have been forged on the network since the genesis block.
      previousBlockID:
        type: string
        description: Hex encoded value of the ID of the previous block of the chain.
      transactionRoot:
        type: string
        description: Hex encoded value of Merkle tree root of transaction IDs
      generatorPublicKey:
        type: string
        description: Hex encoded value of public key of the delegate who forged the block.
      reward:
        type: string
        description: The reward for the delegate.
      asset:
        description: Object stored in the block header as defined by the application
        $ref: '#/definitions/BlockAsset'
      signature:
        type: string
        description: Hex encoded value of the signature for the block.

  Transaction:
    type: object
    required:
      - id
      - type
      - nonce
      - fee
      - senderPublicKey
      - asset
      - signatures
    properties:
      id:
        type: string
        description: Hex encoded value of the unique identifier of the transaction.
      moduleID:
        type: number
        description: Module Id for transaction asset
      assetID:
        type: number
        description: Asset Id for transaction asset
      fee:
        type: string
        description: |
          Transaction fee associated with this transaction.
      nonce:
        type: string
        example: '1'
        description: |
          Unique sequence of number per account.
      senderPublicKey:
        type: string
        description: |
          Hex encoded value of the public key of the Senders account.
      asset:
        type: object
        description: Object stored per transaction type
      signatures:
        type: array
        items:
          type: string
          description: Hex encoded value of the signature for the transaction.

  TransactionRequest:
    type: object
    required:
      - moduleID
      - assetID
      - nonce
      - fee
      - senderPublicKey
      - asset
      - signatures
    properties:
      moduleID:
        type: number
        description: Module Id for transaction asset
      assetID:
        type: number
        description: Asset Id for transaction asset
      fee:
        type: string
        description: |
          Transaction fee associated with this transaction.
      nonce:
        type: string
        example: '1'
        description: |
          Unique sequence of number per account.
      senderPublicKey:
        type: string
        description: |
          Hex encoded value of the public key of the Senders account.
      asset:
        type: object
        description: Object stored per transaction type
      signatures:
        type: array
        items:
          type: string
          description: Hex encoded value of the signature for the transaction.

  Forger:
    type: object
    required:
      - address
      - username
      - nextForgingTime
    properties:
      address:
        type: string
        example: 9d0149b0962d44bfc08a9f64d5afceb6281d7fb5
        description: |
          The binary address in hex format as defined in LIP-0018.
      totalVotesReceived:
        type: string
        example: 1081560729258
        description: |
          The total votes received by the delegate.
          Represents the total amount of token that the delegates voters voted this delegate.
      username:
        type: string
        example: genesis_01
        description: |
          The delegates username.
          A delegate chooses the username by registering a delegate on the network.
          It is unique and cannot be changed later.
      nextForgingTime:
        type: number
        example: 4368793
        description: |
          Returns the unix timestamp in second in which the forger will be able to forge the next block.
          Each slot has a timespan of 10 seconds.

  Peer:
    type: object
    required:
      - ipAddress
      - port
      - networkIdentifier
      - state
      - networkVersion
      - nonce
      - options
    properties:
      ipAddress:
        type: string
        example: 127.0.0.1
        description: IPv4 address of the peer node.
      port:
        type: integer
        example: 8001
        minimum: 1
        maximum: 65535
        description: The port the peer node uses for P2P communication.
      networkVersion:
        type: string
        example: 1.1
        description: The protocol version of Lisk Core that the peer node runs on.
      networkIdentifier:
        type: string
        example: '93d00fe5be70d90e7ae247936a2e7d83b50809c79b73fa14285f02c842348b3e'
        description: Hex encoded value of the network identifier as per LIP-0009.
      state:
        type: string
        example: 'connected'
        enum:
          - connected
          - disconnected
        description: |
          The state of the peer.
      options:
        type: object
        description: Optional field defined by application

  NodeInfo:
    type: object
    required:
      - version
      - networkVersion
      - networkIdentifier
      - lastBlockID
      - height
      - finalizedHeight
      - syncing
      - unconfirmedTransactions
      - genesisConfig
    properties:
      version:
        type: string
        format: version
        example: v0.8.0
        description: The application version that the node is running on.
      networkVersion:
        type: string
        example: 1.1
        description: The protocol version of Lisk Core that the peer node runs on.
      networkIdentifier:
        type: string
        example: '93d00fe5be70d90e7ae247936a2e7d83b50809c79b73fa14285f02c842348b3e'
        description: Hex encoded value of the network identifier as per LIP-0009.
      lastBlockID:
        description: ID of the last processed block.
        type: string
        example: vPFBr0ZTsyP9hUwKaQD8dW2lKBpgMWkRdgrTUUmBBCE=
      height:
        type: integer
        example: 123
        minimum: 1
        description: |
          Current block height of the node.
          Represents the current number of blocks in the chain on the node.
      finalizedHeight:
        type: integer
        example: 123
        description: |
          The largest height with precommits by at least 68 delegates.
          See https://github.com/LiskHQ/lips/blob/master/proposals/lip-0014.md
      syncing:
        type: boolean
        example: false
        description: True if the node is syncing with other peers.
      unconfirmedTransactions:
        type: integer
        example: 1
        minimum: 0
        description: |
          Number of unprocessed transactions in the pool.
      genesisConfig:
        type: object
        required:
          - blockTime
          - maxPayloadLength
          - rewards
          - activeDelegates
          - standbyDelegates
          - delegateListRoundOffset
        properties:
          blockTime:
            type: integer
            minimum: 2
            example: 10
            description: Block time interval in seconds.
          maxPayloadLength:
            type: integer
            example: 15360
            description: Maximum size of transactions allowed per block.
          activeDelegates:
            type: integer
            description: Number of active delegates per round.
            example: 101
          standbyDelegates:
            type: integer
            description: Number of standby delegates per round.
            example: 2
          delegateListRoundOffset:
            type: integer
            description: Number of rounds before in which the list of delegates will be used for the current round.
            example: 2
          rewards:
            type: object
            required:
              - milestones
              - offset
              - distance
            properties:
              milestones:
                type: array
                description: Array of rewards.
                items:
                  type: string
                  example: 500000000
              offset:
                type: integer
                minimum: 1
                example: 2160
                description: height in which reward distribution starts.
              distance:
                type: integer
                description: Distance in height between each milestone.
                example: 3000000
          communityIdentifier:
            type: string
            description: The unique name of the relevant community as a string encoded in UTF-8 format.
            example: Lisk
          totalAmount:
            type: string
            description: Total amount of LSK available in network before rewards milestone started
            example: 10000000000000000
